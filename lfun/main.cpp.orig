#include <iostream>
#include <string>
#include <vector>

using namespace std;
using ltype = unsigned long;

class lfun
{
public:
    lfun(ltype m)
    {
        for (ltype i = 1; i < m; i++ )
        {
            for (ltype j = 1; j < m; j++ )
            {
                ln[i][j] = (i * j) % m;
            }
        }
    }
	ltype getValue(ltype k)
	{
		if (k == 0 || k >= ln.size())
		{
			return 0;
		}
		ltype count = 0;
		for (auto i : ln)
			for (auto j : i)
			{
				if (j == k)
					count++;
			}
		return count;
	}
	void print(bool nu)
	{
		if (nu)
		{
			auto p = ln;
			vector<ltype> line(ln[0].size() + 1);
			p.insert(p.begin(),line);
			for (ltype i = 0; i < line.size(); i++ )
			{
				p[0][i] = i;
			}
			for (ltype i = 1; i < p.size(); i++ )
				p[i].insert(p[i].begin(),i);
		}
		for (auto i : ln)
		{
			for (auto j : i)
				cout << j << ' ';
			cout << endl;
		}
	}
private:
    vector<vector<ltype>> ln;
};
